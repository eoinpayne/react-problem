{"version":3,"sources":["logo.svg","components/MyHeaderBare.js","components/EsppDepositRow.js","components/ESPPTable.js","App.js","serviceWorker.js","js/reducers/index.js","js/constants/action-types.js","js/store/index.js","index.js"],"names":["module","exports","MyHeaderBare","Navbar","bg","variant","fixed","id","expand","Brand","style","href","Toggle","aria-controls","EsppDepositRow","props","useState","units","setUnits","taxRate","setTaxRate","daysToPay","setDaysToPay","setTotalChargeableAmount","totalLiab","setTotalLiab","TaxRateSelect","useEffect","datePlus","moment","row","date","add","now","daysLeft","diff","fmvEUR","acquiredPriceEUR","console","log","theRefReturned","updateOuterState","index","dir","totalLiability","tempyPrev","name","value","onChange","totalLiabilityRef","useRef","format","acquiredPriceUSD","fmvUSD","event","target","ref","EsppTable","myRef","myObj","current","find","currObj","JSON","stringify","push","Jumbotron","textAlign","Table","responsive","map","heading","key","myStateRef","App","Fragment","Boolean","window","location","hostname","match","initialState","esppRowData","rootReducer","state","action","type","Object","assign","articles","concat","payload","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05f13e1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function MyHeaderBare() {\n    return (\n        <Navbar bg=\"light\" variant=\"light\" fixed=\"top\" id=\"myHeader\" expand=\"lg\">\n            <Navbar.Brand style={{\"margin-right\":\"3rem\"}}href=\"https://simplecgt.com\">simplecgt.com</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </Navbar>\n    );\n}\n\n\n// //works\n//  export default function MyHeader() {\n//     return(<div id='myHeader'> sup </div>);\n// }\n\n\n// const MyHeader = () =>  {\n//     return(<div id='myHeader'> sup </div>);\n// }\n\n// export default MyHeader\n\n\n\n// // src/id.js\n\n// import React from 'react'\n\n// function Title() {\n//     return (\n//         <div>\n//             <h1>SFPOPOS</h1>\n//         </div>\n//     )\n// }\n","import React, { useState, useEffect, useRef } from 'react';\nimport moment from 'moment'\n\n\n//WD specific and maintained.\n//rows starting from 2018?  **component\n//2 rows per year    **component\n\n//date   //sale price$  //sale price€\n//\n\n//Share Deposit Dates       //Days until SDD\n//!! Acquired Price $   !! Acquired Price €\n//!! FMV Fair Market Value  $  /FMV €\n//!! Units\n//!! Tax Rate    46% | 48.5 | 52%\"  drop down... conditionally select from income\n//\"ON RTSO1 form \"\"TOTAL LIABILITY\"\" RTSO to be paid withing 30 days of Vesting\"\t\n//ON RTSO1 form \"total amount of gain made on share option\"\n//RTSO to be paid by   //days left to pay\n\n//FORM 11\n//Enter total chargeable amount\t\n//Enter the amount of Relevant Tax on a Share Option (RTSO) paid\n\n//income\n//Gross Salary as of Share Deposit Date (ESPP end Period)\t\n//Total Gross Shares\n//{Gross Income}\n\n\nexport default function EsppDepositRow(props) {\n\n    // useEffect(() => {\n    //     console.log(`indexy ${props.index} `)\n    // });\n\n\n    const [units, setUnits] = useState(0);\n    const [taxRate, setTaxRate] = useState(52);\n    const [daysToPay,setDaysToPay] = useState(3);\n    const [totalChargeableAmount, setTotalChargeableAmount] = useState(0);\n    const [totalLiab, setTotalLiab] = useState(0);\n\n    // [{id:1, value : 600}, {id:2, value: 100}, {id:3, value : 600}]\n\n  \n\n    const handleUnitsChange = (event) => (\n        setUnits(event.target.value) //no ()=> as not working with previou value, just replacing with new value\n    )\n    const handleTaxRateChange = (event) => (\n        setTaxRate(event.target.value)\n    )\n\n        //useRef\n        //useReducer\n    // useEffect(() => {\n    // if (totalLiabilityRef.current.outerText !== null) return () => updateOuterState(props.index, totalLiabilityRef.current.outerText)\n    // },[units,taxRate]);\n    // const mainUE =  useEffect(() => {\n    //     // props.updateOuterState(props.index, totalLiabilityRef.current.outerText)\n    // // if (totalLiabilityRef.current.outerText !== null) return () => props.updateOuterState(props.index, totalLiabilityRef.current.outerText)\n    // console.log(\"totalLiab fresssness\")\n    // console.log(totalLiab)\n    \n    // // if (totalLiabilityRef.current.outerText !== null) return () => props.updateOuterState(props.index, totalLiab)\n    // },[units, taxRate]);\n\n    const updateDaysToPay = useEffect( ()=>{\n        let ddate = moment(props.row.date);\n        let datePlus = ddate.add(28,\"days\");\n        let now = moment();\n        let daysLeft = datePlus.diff(now, 'days');\n\n        setDaysToPay(daysLeft >= 0 ? daysLeft : \"--\")\n    })\n\n    const updateTotalLiab =  useEffect(() => {\n        // props.updateOuterState(props.index, totalLiabilityRef.current.outerText)\n        setTotalLiab(   ( (props.row.fmvEUR - props.row.acquiredPriceEUR) * (taxRate / 100)) * units  )\n        },[units, taxRate]);\n\n\n\n\n        const updateTotalChargeable =  useEffect(() => {\n            console.log(\"ref returned\")\n            const theRefReturned = props.updateOuterState(props.index, totalLiab)\n            console.log(\"ref returned eND\")\n            console.log(\"propalopadoo -7087089-798\")\n            // console.dir(props.myStateRef.current.find((currObj) => currObj.id === props.index-1))\n            console.dir(theRefReturned[0].totalLiability)\n            console.log(\"propalopadoo -\")\n            const tempyPrev = props.index > 0 ? theRefReturned[props.index-1].totalLiability : theRefReturned[props.index].totalLiability\n            // const prevLiab = props.myStateRef.current.find((currObj) => currObj.id === props.index-1);\n\n            setTotalChargeableAmount( totalLiab + tempyPrev )\n        // setTotalChargeableAmount( totalLiab + props.myStateRef  )\n        },[totalLiab]);\n\n\n\n\n\n\n    const TaxRateSelect = function (props) {\n        return (\n            <select name=\"taxRate\" id=\"taxRate\" value={taxRate} onChange={props.onChange}>\n                {/* <option value=\"select\">select</option> */}\n                <option value=\"52\">52%</option>\n                <option value=\"48.5\">48.5%</option>\n                <option value=\"46\">46%</option>\n            </select>\n        )\n    }\n\n    const calcTotalChargeableAmount = (props) =>{\n        console.log(\"props !_!_!_!_\")\n        console.dir(props)\n        // const valuePrior = props.myStateRef.current.find((currObj) => currObj.id === props.index-1) ? props.myStateRef.current.find((currObj) => currObj.id === props.index-1) : 0\n        // const value = props.myStateRef.current.find((currObj) => currObj.id === props.index);\n\n        // console.log(`valuePrior is : ${valuePrior.totalLiability}`)\n        // console.log(`value is : ${value.totalLiability}`)\n        // const totalChargeableAmount = value.totalLiability + valuePrior.totalLiability\n        // return totalChargeableAmount\n        return 6\n    // const calcTotalChargeableAmount = () =>{\n    //     console.log(\"myRef !_!_!_!_\")\n    //     console.dir(myRef)\n\n    //     console.log(\"totalLiabilityRef !_!_!_!_\")\n    //     console.dir(totalLiabilityRef)\n    //     // const valuePrior = props.myStateRef.current.find((currObj) => currObj.id === props.index-1) ? props.myStateRef.current.find((currObj) => currObj.id === props.index-1) : 0\n    //     // const value = props.myStateRef.current.find((currObj) => currObj.id === props.index);\n\n    //     // console.log(`valuePrior is : ${valuePrior.totalLiability}`)\n    //     // console.log(`value is : ${value.totalLiability}`)\n    //     // const totalChargeableAmount = value.totalLiability + valuePrior.totalLiability\n    //     // return totalChargeableAmount\n    //     return 6\n\n\n\n\n    }\n    const totalLiabilityRef = useRef()\n\n    return (\n        <tr>\n            <td>{props.index}</td>\n            <td>{moment(props.row.date).format(\"YYYY-MM-DD\")}</td>\n            <td>${props.row.acquiredPriceUSD}</td>\n            <td>€{props.row.acquiredPriceEUR}</td>\n            <td>${props.row.fmvUSD}</td>\n            <td>€{props.row.fmvEUR}</td>\n            <td ><input value={units} onChange={handleUnitsChange}></input></td>\n            <td><TaxRateSelect onChange={handleTaxRateChange} /></td>\n\n            {/* total liablilty */}\n            <td id=\"totalLiability\" ref={totalLiabilityRef}>{totalLiab}</td>\n            {/* <td id=\"totalLiability\" ref={totalLiabilityRef}>{((props.row.fmvEUR - props.row.acquiredPriceEUR) * (taxRate / 100)) * units}</td> */}\n            {/* total amount of gain  */}\n            <td id=\"amountGain\">{(props.row.fmvEUR - props.row.acquiredPriceEUR) * units}</td>\n            <td>{moment(props.row.date).add(29, 'days').format(\"YYYY-MM-DD\")}</td>\n            {/* <td>{ moment().diff(moment(props.row.date),\"days\")}</td> */}\n            {/* <td>{moment(props.row.date).diff(moment(), \"days\") >= 0 ? moment(props.row.date).diff(moment(), \"days\") : \"x\"}</td> */}\n            {/* <td>{moment(props.row.date).diff(moment(props.row.date).add(28,\"days\"), \"days\")}</td> */}\n            <td>{daysToPay}</td>\n            {/* <td>{props.index % 2 === 0 && \"yep\"}</td> */}\n            {/* <td>{totalChargeableAmount}</td> */}\n            {/* <td>{props.index % 2 === 0 && totalChargeableAmount}</td> */}\n            <td>coming soon</td>\n            <td>coming soon</td>\n        </tr>\n\n\n        // <tr>\n        //     <td>{props.index}</td>\n        //     { Object.entries(props.row).map((thing,index) => (\n        //         <td key={index}>{thing[1]}</td>\n        //     ))}\n        // </tr>\n\n\n        // <Card>\n        //     <Form inline onSubmit={handleSubmit}>\n        //         <Form.Group>\n        //             {/* <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-envelope\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" style = {{\"marginRight\": \"5px\"}}>\n        //             <path fill-rule=\"evenodd\" d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\" />\n        //         </svg>                 */}\n        //             <Form.Label for=\"username\">username</Form.Label>\n        //             <Form.Control\n        //                 id=\"username\"\n        //                 value={username}\n        //                 required\n        //                 style={usernameInvalidChar ? { 'border': '2px solid red', 'font-size': '.75rem' } : { 'font-size': '.75rem' }}\n        //                 type=\"text\"\n        //                 placeholder=\"username/email\"\n        //                 className=\"mr-sm-2\"\n        //                 onChange={handleNameChange} />\n        //         </Form.Group>\n        //         <Form.Group>\n        //             <Form.Label for=\"password\">password</Form.Label>\n        //             <Form.Control\n        //                 id=\"password\"\n        //                 value={password}\n        //                 required\n        //                 style={passwordInValidChar ? { border: '2px solid red', 'font-size': '.75rem' } : { 'font-size': '.75rem' }}\n        //                 type=\"text\"\n        //                 placeholder=\"password\"\n        //                 className=\"mr-sm-2\"\n        //                 onChange={handlePasswordChange} />\n        //         </Form.Group>\n        //         <Button\n        //             disabled={isInvalidusername || isInvalidPassword}\n        //             style={{ 'font-size': '.75rem' }}\n        //             variant=\"outline-info\">\n        //             Log In </Button>\n        //     </Form>\n        // </Card>\n    )\n}\n\n\n//generic\n    //number of periods per year, once number entered and \"same each year?\" is yes. \n        //popup x number of fields, date attributes\n        //starting year - ending year\n    //auto generate number of year rows, with year field populated and date populated\n\n","import React, {useState, useRef, Fragment} from 'react';\nimport EsppDepositRow from './EsppDepositRow';\nimport Table from 'react-bootstrap/Table';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\n//WD specific and maintained.\n//rows starting from 2018?  **component\n//2 rows per year    **component\n\n//date   //sale price$  //sale price€\n//\n\n//Share Deposit Dates       //Days until SDD\n//!! Acquired Price $   !! Acquired Price €\n//!! FMV Fair Market Value  $  /FMV €\n//!! Units\n//!! Tax Rate    46% | 48.5 | 52%\"  drop down... conditionally select from income\n//\"ON RTSO1 form \"\"TOTAL LIABILITY\"\" RTSO to be paid withing 30 days of Vesting\"\t\n//ON RTSO1 form \"total amount of gain made on share option\"\n//RTSO to be paid by   //days left to pay\n\n//FORM 11\n//Enter total chargeable amount\t\n//Enter the amount of Relevant Tax on a Share Option (RTSO) paid\n\n//income\n//Gross Salary as of Share Deposit Date (ESPP end Period)\t\n//Total Gross Shares\n//{Gross Income}\n\nexport default function EsppTable() {\n  const esppDetails = [\n    {\n      date: \"2017-11-30\",\n      acquiredPriceUSD: 83.63,\n      acquiredPriceEUR: 70.29,\n      fmvUSD: 103,\n      fmvEUR: 86.57,\n    },\n    {\n      date: \"2018-05-31\",\n      acquiredPriceUSD: 85.44,\n      acquiredPriceEUR: 73.07,\n      fmvUSD: 130.96,\n      fmvEUR: 112,\n    },\n    {\n      date: \"2018-11-30\",\n      acquiredPriceUSD: 107.34,\n      acquiredPriceEUR: 94.83,\n      fmvUSD: 164,\n      fmvEUR: 144.89,\n    },\n    {\n      date: \"2019-05-31\",\n      acquiredPriceUSD: 142.63,\n      acquiredPriceEUR: 127.37,\n      fmvUSD: 204.12,\n      fmvEUR: 182.28,\n      units: 10,\n    },\n    {\n      date: \"2019-11-30\",\n      acquiredPriceUSD: 152.25,\n      acquiredPriceEUR: 138,\n      fmvUSD: 179.12,\n      fmvEUR: 162.57,\n      units: 10,\n    },\n    {\n      date: \"2020-05-31\",\n      acquiredPriceUSD: 146.14,\n      acquiredPriceEUR: 131.45,\n      fmvUSD: 183.43,\n      fmvEUR: 164.99,\n      units: 10,\n    },\n    {\n      date: \"2020-11-30\",\n      acquiredPriceUSD: 151.27,\n      acquiredPriceEUR: 126.212,\n      fmvUSD: 224.55,\n      fmvEUR: 187.76,\n      units: 10,\n    },\n  ];\n\n  const headers = [\n    \"Share Deposit Date YYYY-MM-DD\",\n    \"$ Acquired Price\",\n    \"€ Acquired Price\",\n    \"$ FMV\",\n    \"€ FMV\",\n    \"Units\",\n    \"Tax Rate\",\n    \"TOTAL LIABILITY\",\n    \"total amount of gain made on share option\",\n    \"RTSO to be paid by\",\n    \"days left to pay\",\n    \"FORM 11: Enter total chargeable amount\",\n    \"FORM 11: Enter the amount of Relevant Tax on a Share Option (RTSO) paid\",\n  ];\n\n  const TaxRateSelect = function () {\n    return (\n      <select name=\"taxRate\" id=\"taxRate\">\n        <option value=\"52\">52%</option>\n        <option value=\"48.5\">48.5%</option>\n        <option value=\"46\">46%</option>\n      </select>\n    );\n  };\n\n  // const [myState, setMystate] = useState([])\n  const myRef = useRef([]);\n  console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&      (*(*(*(*(    myRef\");\n  console.log(myRef);\n  // [{id:1, value : 600}, {id:2, value: 100}, {id:3, value : 600}]\n\n  const updateOuterState = (index, totalLiability) => {\n    let myObj = [...myRef.current];\n    // myobj = [{id:1, value : 600}, {id:2, value: 100}, {id:3, value : 600}]\n\n    const row = myObj.find((currObj) => currObj.id === index);\n    // const row = myObj.get(index);\n    if (row) {\n      row.totalLiability = totalLiability;\n      console.log(` updated row baby = ${JSON.stringify(row)}`);\n      console.log(` after baby -> myObj`);\n      console.dir(myObj);\n    } else {\n      myObj.push({ id: index, totalLiability: totalLiability });\n      //   console.log(` with new obj baby = ${JSON.stringify(myObj)}`)\n      console.log(` else Obj new concat`);\n      console.dir(myObj);\n      // [{id:1, value : 600}, {id:2, value: 100}, {id:3, value : 600}, {}]\n    }\n    myRef.current = myObj;\n    //[{id:1, value : 600}, {id:2, value: 100}, {id:3, value : 600}]\n    // setMystate(myObj)\n    return myObj;\n  };\n\n  // ()=>setCount(currentCount=> currentCount+1)\n\n  // const rowby = esppDetails.map((row, index) => (\n  //     <tr>\n  //         <td>{index}</td>\n  //         <td>{row.date}</td>\n  //         <td>{row.acquiredPriceUSD}</td>\n  //         <td>{row.acquiredPriceEUR}</td>\n  //         <td>{row.fmvUSD}</td>\n  //         <td>{row.fmvEUR}</td>\n  //         <td>{row.units}</td>\n  //         <TaxRateSelect/>\n  //         {/* <td>{((row.fmvEUR-row.acquiredPriceEUR)*tax rate)*row.units)}</td> */}\n\n  //     </tr>\n  // ))\n\n  return (\n    <Fragment>\n      <Jumbotron>\n        <h1 style={{textAlign: \"center\"}}>Manual ESPP calculator</h1>\n        <p style={{textAlign: \"center\"}}>\n        This will be automated soon in with the main site, requiring you to just upload Morgan Staley export file. \n        </p>\n        {/* <p> */}\n          {/* <Button variant=\"primary\">Go to CGT dashboard</Button> */}\n        {/* </p> */}\n      </Jumbotron>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            {headers.map((heading, index) => (\n              <th key={index}>{heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {esppDetails.map((row, index) => (\n            // <EsppDepositRow row={row} index={index} updateOuterState = {updateOuterState} />\n            <EsppDepositRow\n              row={row}\n              index={index}\n              updateOuterState={updateOuterState}\n              myStateRef={myRef}\n            />\n            // <EsppDepositRow row={row} index={index}/>\n          ))}\n\n          {/* {myRef[0]} */}\n\n          {/* {rowby} */}\n        </tbody>\n      </Table>\n    </Fragment>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyHeader from './components/MyHeader';\nimport MyHeaderBare from './components/MyHeaderBare';\nimport ESPPTable from './components/ESPPTable';\nimport ESPPTable2 from './components/ESPPTable2';\nimport {useSelector} from 'react-redux'\n\n\nfunction App() {\n  // const esppRowData = useSelector((state) => state.esppRowData)\n\n  return (\n    <React.Fragment>\n      {/* <MyHeader /> */}\n      <MyHeaderBare />\n      {/* <br></br> */}\n      {/* <br></br> */}\n\n      <br></br>\n      {/* <ESPPTable2 esppData = {esppRowData}/> */}\n      <ESPPTable/>\n      {/* <ESPPTable2 /> */}\n    </React.Fragment>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import {ADD_ARTICLE, UPDATE_UNITS} from \"../constants/action-types.js\"\nimport { ADD_ARTICLE, UPDATE_UNITS } from \"../constants/action-types\";\n\n\nconst initialState = {\n    esppRowData:\n  [\n    { id: 0, date: \"2017-11-30\", acquiredPriceUSD: 83.63, acquiredPriceEUR: 70.29,     fmvUSD: 103,    fmvEUR: 86.57 },\n    { id: 1, date: \"2018-05-31\", acquiredPriceUSD: 85.44, acquiredPriceEUR: 73.07,     fmvUSD: 130.96, fmvEUR: 112 },\n    { id: 2, date: \"2018-11-30\", acquiredPriceUSD: 107.34, acquiredPriceEUR: 94.83,    fmvUSD: 164,    fmvEUR: 144.89 },\n    { id: 3, date: \"2019-05-31\", acquiredPriceUSD: 142.63, acquiredPriceEUR: 127.37,   fmvUSD: 204.12, fmvEUR: 182.28, units: 10 },\n    { id: 4, date: \"2019-11-30\", acquiredPriceUSD: 152.25, acquiredPriceEUR: 138.,     fmvUSD: 179.12, fmvEUR: 162.57, units: 10 },\n    { id: 5, date: \"2020-05-31\", acquiredPriceUSD: 146.14, acquiredPriceEUR: 131.45,   fmvUSD: 183.43, fmvEUR: 164.99, units: 10 },\n    { id: 6, date: \"2020-11-30\", acquiredPriceUSD: 999,      acquiredPriceEUR: 999,        fmvUSD: 0,      fmvEUR: 0,      units: 99 }\n]\n};\n\n//use concat, slice, or the spread operator for arrays\n//use Object.assign or object spread of objects\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ARTICLE) {\n      return Object.assign({}, state, {\n          articles: state.articles.concat(action.payload)         \n      })\n  }\n  if (action.type === UPDATE_UNITS) {\n    return Object.assign({}, state, {\n        esppRowData: state.esppRowData.concat(action.payload)         \n    })\n}\n  return state;\n}\n\n\n// const rootReducer = (state = initialState, action) => {\n//     switch(action.type){\n//         case ADD_ARTICLE: return (\n//             Object.assign({}, state, {\n//                 articles: state.articles.concat(action.payload)         \n//             })\n//         )\n//         case UPDATE_UNITS: return\n//         default: return state\n    \n//     }//switch\n//   }\n\nexport default rootReducer;\n\n\n","export const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const UPDATE_UNITS = \"UPDATE_UNITS\";\n","import {createStore} from \"redux\";\nimport rootReducer from \"../reducers/\";\n// import rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());   //may also pass initial state, useful for server side rendering & state preloading.. \n//->The state in Redux comes from reducers. \n// store.subscribe(()=> console.log(store.getState()))\n\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\n// import App from \"./js/components/App\";\n\nReactDOM.render(\n  <Provider store = {store}>\n  {/* <React.StrictMode> */}\n    <App />\n  {/* </React.StrictMode>, */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}